let rastreamentoAtivo = false;
let rastreamentoWatcherId;

function iniciarRastreamento(funcionarioId) {
    if (!funcionarioId) {
        console.error("‚ùå ERRO: ID do funcion√°rio n√£o informado para rastreamento!");
        return;
    }

    if (rastreamentoAtivo) {
        console.warn("‚ö†Ô∏è Rastreamento j√° est√° ativo.");
        return;
    }

    rastreamentoAtivo = true;

    console.log(`‚úÖ Rastreamento iniciado com watchPosition para funcion√°rio ID: ${funcionarioId}`);

    if ("geolocation" in navigator) {
        rastreamentoWatcherId = navigator.geolocation.watchPosition(
            position => {
                const dados = {
                    id_funcionario: funcionarioId,
                    latitude: position.coords.latitude,
                    longitude: position.coords.longitude,
                    timestamp: new Date().toISOString()
                };

                console.log("üì° Enviando dados de rastreamento:", dados);

                fetch('/api/rastreamento', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify(dados)
                })
                .then(response => {
                    if (!response.ok) {
                        console.error("‚ùå Falha ao enviar rastreamento:", response.statusText);
                    } else {
                        console.log("‚úÖ Rastreamento enviado com sucesso.");
                    }
                })
                .catch(error => {
                    console.error("‚ùå Erro de rede ao enviar rastreamento:", error);
                });
            },
            error => {
                console.error("‚ùå Erro ao obter localiza√ß√£o:", error.message);
            },
            {
                enableHighAccuracy: true,
                maximumAge: 5000,  // mant√©m at√© 5s para reduzir consumo
                timeout: 10000
            }
        );
    } else {
        console.warn("‚ö†Ô∏è Geolocaliza√ß√£o n√£o suportada neste navegador.");
    }
}

function pararRastreamento() {
    if (rastreamentoAtivo && rastreamentoWatcherId !== undefined) {
        navigator.geolocation.clearWatch(rastreamentoWatcherId);
        rastreamentoAtivo = false;
        rastreamentoWatcherId = undefined;
        console.log("üõë Rastreamento parado com clearWatch.");
    } else {
        console.log("‚ÑπÔ∏è Rastreamento j√° estava parado ou n√£o iniciado.");
    }
}
